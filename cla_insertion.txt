CLASS zmrg_data_insertion DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .

    METHODS: insert_data,
      read_cds_view,
      read_cds_with_params,
      read_cds_opt_param.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zmrg_data_insertion IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.

    " Data insertion
    "me->insert_data( ).
    " Read CDS view
    "me->read_cds_view(  ).
  ENDMETHOD.


  METHOD insert_data.
*    " ZPRODUCT_MRG FILL DATA
*    DATA: gs_zproduct    TYPE zproduct_mrg.
*    DATA: gt_zproduct    TYPE STANDARD TABLE OF zproduct_mrg WITH EMPTY KEY.
*
*    CLEAR gt_zproduct.
*
*    CLEAR gs_zproduct.
*    gs_zproduct-product             = 'P1'.
*    gs_zproduct-product_type        = 'T1'.
*    GET TIME STAMP FIELD gs_zproduct-creation_date_time.
*    INSERT gs_zproduct INTO TABLE gt_zproduct.
*
*    CLEAR gs_zproduct.
*    gs_zproduct-product             = 'P2'.
*    gs_zproduct-product_type        = 'T1'.
*    GET TIME STAMP FIELD gs_zproduct-creation_date_time.
*    INSERT gs_zproduct INTO TABLE gt_zproduct.
*
*    CLEAR gs_zproduct.
*    gs_zproduct-product             = 'P3'.
*    gs_zproduct-product_type        = 'T3'.
*    GET TIME STAMP FIELD gs_zproduct-creation_date_time.
*    INSERT gs_zproduct INTO TABLE gt_zproduct.
*
*    MODIFY zproduct_mrg FROM TABLE @gt_zproduct.
*    COMMIT WORK.
*
*
*    " ZSALESORDERITEM1 Fill data
*
*    DATA: gs_zsalesorderitem TYPE zsalesorderitem1.
*    DATA: gt_zsalesorderitem TYPE STANDARD TABLE OF zsalesorderitem1 WITH EMPTY KEY.
*
*    CLEAR gt_zsalesorderitem.
*
*    CLEAR gs_zsalesorderitem.
*    gs_zsalesorderitem-salesorder          = 'S1'.
*    gs_zsalesorderitem-salesorderitem      = '000010'.
*    gs_zsalesorderitem-product             = 'P1'.
*    gs_zsalesorderitem-netamount           = 10.
*    gs_zsalesorderitem-transactioncurrency = 'EUR'.
*    gs_zsalesorderitem-orderquantity       = 10.
*    gs_zsalesorderitem-orderquantityunit   = 'KG'.
*    gs_zsalesorderitem-creationdate        = cl_abap_context_info=>get_system_date(  ).
*    INSERT gs_zsalesorderitem INTO TABLE gt_zsalesorderitem.
*
*    CLEAR gs_zsalesorderitem.
*    gs_zsalesorderitem-salesorder          = 'S1'.
*    gs_zsalesorderitem-salesorderitem      = '000020'.
*    gs_zsalesorderitem-product             = 'P2'.
*    gs_zsalesorderitem-netamount           = 20.
*    gs_zsalesorderitem-transactioncurrency = 'EUR'.
*    gs_zsalesorderitem-orderquantity       = 20.
*    gs_zsalesorderitem-orderquantityunit   = 'KG'.
*    gs_zsalesorderitem-creationdate        = cl_abap_context_info=>get_system_date(  ).
*    INSERT gs_zsalesorderitem INTO TABLE gt_zsalesorderitem.
*
*    CLEAR gs_zsalesorderitem.
*    gs_zsalesorderitem-salesorder          = 'S2'.
*    gs_zsalesorderitem-salesorderitem      = '000010'.
*    gs_zsalesorderitem-product             = 'P1'.
*    gs_zsalesorderitem-netamount           = 10.
*    gs_zsalesorderitem-transactioncurrency = 'EUR'.
*    gs_zsalesorderitem-orderquantity       = 10.
*    gs_zsalesorderitem-orderquantityunit   = 'KG'.
*    gs_zsalesorderitem-creationdate        = cl_abap_context_info=>get_system_date(  ).
*    INSERT gs_zsalesorderitem INTO TABLE gt_zsalesorderitem.
*
*    CLEAR gs_zsalesorderitem.
*    gs_zsalesorderitem-salesorder          = 'S2'.
*    gs_zsalesorderitem-salesorderitem      = '000020'.
*    gs_zsalesorderitem-product             = 'P3'.
*    gs_zsalesorderitem-netamount           = 10.
*    gs_zsalesorderitem-transactioncurrency = 'EUR'.
*    gs_zsalesorderitem-orderquantity       = 10.
*    gs_zsalesorderitem-orderquantityunit   = 'KG'.
*    gs_zsalesorderitem-creationdate        = cl_abap_context_info=>get_system_date(  ).
*    INSERT gs_zsalesorderitem INTO TABLE gt_zsalesorderitem.
*
*    MODIFY zsalesorderitem1 FROM TABLE @gt_zsalesorderitem.
*    COMMIT WORK.


*    DATA: gs_zproducttext    TYPE zmrgproducttext.
*    DATA: gt_zproducttext    TYPE STANDARD TABLE OF zmrgproducttext WITH EMPTY KEY.
*
*    CLEAR gt_zproducttext.
*
*    CLEAR gs_zproducttext.
*    gs_zproducttext-product             = 'P1'.
*    gs_zproducttext-product_name        = 'P1 English'.
*    gs_zproducttext-language            = 'E'.
*    INSERT gs_zproducttext INTO TABLE gt_zproducttext.
*
*    CLEAR gs_zproducttext.
*    gs_zproducttext-product             = 'P1'.
*    gs_zproducttext-product_name        = 'P1 Deutsch'.
*    gs_zproducttext-language            = 'D'.
*    INSERT gs_zproducttext INTO TABLE gt_zproducttext.
*
*    CLEAR gs_zproducttext.
*    gs_zproducttext-product             = 'P2'.
*    gs_zproducttext-product_name        = 'P2 English'.
*    gs_zproducttext-language            = 'E'.
*    INSERT gs_zproducttext INTO TABLE gt_zproducttext.
*
*    CLEAR gs_zproducttext.
*    gs_zproducttext-product             = 'P2'.
*    gs_zproducttext-product_name        = 'P2 Deutsch'.
*    gs_zproducttext-language            = 'D'.
*    INSERT gs_zproducttext INTO TABLE gt_zproducttext.
*
*    MODIFY zmrgproducttext FROM TABLE @gt_zproducttext.
*    COMMIT WORK.

  DATA: gs_zproduct    TYPE zmrgproduct.
  DATA: gt_zproduct    TYPE STANDARD TABLE OF zmrgproduct WITH EMPTY KEY.

  CLEAR gt_zproduct.

  CLEAR gs_zproduct.
  gs_zproduct-product             = 'P1'.
  gs_zproduct-product_type        = 'T1'.
  GET TIME STAMP FIELD gs_zproduct-creation_date_time.
  INSERT gs_zproduct INTO TABLE gt_zproduct.

  CLEAR gs_zproduct.
  gs_zproduct-product             = 'P2'.
  gs_zproduct-product_type        = 'T1'.
  GET TIME STAMP FIELD gs_zproduct-creation_date_time.
  INSERT gs_zproduct INTO TABLE gt_zproduct.

  CLEAR gs_zproduct.
  gs_zproduct-product             = 'P3'.
  gs_zproduct-product_type        = 'T3'.
  GET TIME STAMP FIELD gs_zproduct-creation_date_time.
  INSERT gs_zproduct INTO TABLE gt_zproduct.

  MODIFY zmrgproduct FROM TABLE @gt_zproduct.
  COMMIT WORK.
  ENDMETHOD.


  METHOD read_cds_view.
    " Local data declaration
    DATA: lt_product TYPE TABLE OF zi_product_mrg WITH DEFAULT KEY.

    SELECT \_product-product AS product,
           \_product-producttype AS producttype,
           \_product-authorizationgroup AS authorizationgroup,
           \_product-creationdatetime AS creationdatetime
    FROM zi_salesorderitem_mrg
    WHERE zi_salesorderitem_mrg~Salesorder = 'S1'
          AND \_product-product IS NOT NULL
    INTO TABLE @lt_product.
  ENDMETHOD.


  METHOD read_cds_with_params.
    " Select data from CDS View with parameters
    DATA(zdatum) = cl_abap_context_info=>get_system_date( ).
    TRY.
        DATA(zlangu) = cl_abap_context_info=>get_user_language_abap_format( ).
      CATCH cx_abap_context_info_error.
        "handle exception
    ENDTRY.

    SELECT * FROM ZMRG_ViewWithParameters( p_keydate = @zdatum, p_language = @zlangu ) INTO TABLE @DATA(lt_tabe).
  ENDMETHOD.


  METHOD read_cds_opt_param.
    SELECT * FROM ZMRG_ViewWithOptionalParams INTO TABLE @DATA(lt_table).
  ENDMETHOD.
ENDCLASS.